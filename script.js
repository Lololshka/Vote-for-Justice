document.addEventListener('DOMContentLoaded', () => {

    // --- –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∏ –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã ---
    const VOTE_NAMESPACE = 'debate-timer-super-final-v2'; // !!! –ò–ó–ú–ï–ù–ò –≠–¢–û –ù–ê –£–ù–ò–ö–ê–õ–¨–ù–û–ï –ò–ú–Ø –î–õ–Ø –ö–ê–ñ–î–´–• –î–ï–ë–ê–¢–û–í !!!
    const API_BASE_URL = 'https://api.counterapi.dev/v1';
    const COUNTER_PEACE_KEY = 'peace';
    const COUNTER_WAR_KEY = 'war';
    const INITIAL_TIME = 90; // –°–µ–∫—É–Ω–¥—ã
    const WORDS_TO_ANIMATE = ["–°–≤–æ–±–æ–¥–∞", "–ù–∞–¥–µ–∂–¥–∞", "–ú–∏—Ä", "–£–∫—Ä–∞—ó–Ω–∞", "–í–æ–ª—è", "–ü–µ—Ä–µ–º–æ–≥–∞", "–Ñ–¥–Ω—ñ—Å—Ç—å", "–°–∏–ª–∞", "–ú–∞–π–±—É—Ç–Ω—î", "–ñ–∏—Ç—Ç—è", "–ì–µ—Ä–æ—è–º –°–ª–∞–≤–∞!"];
    const WORD_SPAWN_INTERVAL = 2500; // –º—Å (–∫–∞–∫ —á–∞—Å—Ç–æ –ø–æ—è–≤–ª—è–µ—Ç—Å—è —Å–ª–æ–≤–æ)
    const TARGET_SPAWN_INTERVAL = 1500; // –º—Å (–∫–∞–∫ —á–∞—Å—Ç–æ –ø–æ—è–≤–ª—è–µ—Ç—Å—è —Ü–µ–ª—å –¥–ª—è –∫–ª–∏–∫–µ—Ä–∞)
    const TARGET_LIFETIME = 2500; // –º—Å (—Å–∫–æ–ª—å–∫–æ –∂–∏–≤–µ—Ç —Ü–µ–ª—å, –µ—Å–ª–∏ –Ω–µ –∫–ª–∏–∫–Ω—É—Ç—å)

    // --- –°—Å—ã–ª–∫–∏ –Ω–∞ DOM —ç–ª–µ–º–µ–Ω—Ç—ã ---
    const body = document.getElementById('body-main');
    const timerText = document.getElementById('timer-text');
    const timerProgressCircle = document.querySelector('.timer-progress-circle');
    const backgroundAnimationsDiv = document.getElementById('background-animations');
    const clickerGameArea = document.getElementById('clicker-game-area');
    const scoreDisplay = document.getElementById('score-display');
    const timerGameSection = document.getElementById('timer-game-section');
    const choiceSection = document.getElementById('choice-section');
    const resultSection = document.getElementById('result-section');
    const peaceBtn = document.getElementById('peaceBtn');
    const warBtn = document.getElementById('warBtn');
    const loadingIndicatorChoice = document.getElementById('loading-indicator-choice');
    const resultMessage = document.getElementById('result-message');
    const voteCountsDiv = document.getElementById('vote-counts');
    const peaceCountSpan = document.getElementById('peace-count');
    const warCountSpan = document.getElementById('war-count');
    const voteErrorP = document.getElementById('vote-error');

    // --- –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –°–æ—Å—Ç–æ—è–Ω–∏—è ---
    let timeLeft = INITIAL_TIME;
    let score = 0;
    let mainTimerInterval = null;
    let wordSpawnInterval = null;
    let targetSpawnInterval = null;
    let activeTimeouts = []; // –•—Ä–∞–Ω–∏–º —Ç–∞–π–º–∞—É—Ç—ã –¥–ª—è –æ—á–∏—Å—Ç–∫–∏
    const CIRCLE_LENGTH = 283; // –î–ª–∏–Ω–∞ –æ–∫—Ä—É–∂–Ω–æ—Å—Ç–∏ SVG –∫—Ä—É–≥–∞

    // --- –§—É–Ω–∫—Ü–∏–∏ API --- (–ö–æ–ø–∏—Ä—É–µ–º –∏–∑ –ø—Ä–æ—à–ª–æ–≥–æ –æ—Ç–≤–µ—Ç–∞)
    async function hitCounterAPI(key, action = 'get') {
        const endpoint = action === 'up' ? `${key}/up` : `${key}/`;
        const url = `${API_BASE_URL}/${VOTE_NAMESPACE}/${endpoint}`;
        try {
            console.log(`API Request: ${url}`);
            const response = await fetch(url);
            if (!response.ok) throw new Error(`API Error: ${response.status}`);
            const data = await response.json();
            console.log(`API Response for ${key} (${action}):`, data);
            return data.count !== undefined ? data.count : (data.value !== undefined ? data.value : 0);
        } catch (error) {
            console.error(`API Fetch error for ${key} (${action}):`, error);
            voteErrorP.textContent = `–û—à–∏–±–∫–∞ —Å–≤—è–∑–∏ —Å —Å–µ—Ä–≤–µ—Ä–æ–º —Å—á–µ—Ç—á–∏–∫–∞ (${error.message}).`;
            voteErrorP.style.display = 'block';
            return null;
        }
    }

    // --- –§—É–Ω–∫—Ü–∏–∏ –û–±–Ω–æ–≤–ª–µ–Ω–∏—è UI ---
    function updateTimerDisplay() {
        const minutes = Math.floor(timeLeft / 60);
        const seconds = timeLeft % 60;
        timerText.textContent = `${String(minutes).padStart(2, '0')}:${String(seconds).padStart(2, '0')}`;

        const progress = ((INITIAL_TIME - timeLeft) / INITIAL_TIME);
        const dashOffset = CIRCLE_LENGTH * (1 - progress);
        timerProgressCircle.style.strokeDashoffset = Math.max(0, dashOffset); // –ù–µ —É—Ö–æ–¥–∏–º –≤ –º–∏–Ω—É—Å

        // –ú–µ–Ω—è–µ–º —Ü–≤–µ—Ç —Ç–∞–π–º–µ—Ä–∞ –∫ –∫–æ–Ω—Ü—É
        if (timeLeft <= 10) {
            timerProgressCircle.style.stroke = '#e74c3c'; // –ö—Ä–∞—Å–Ω—ã–π
            timerText.style.color = '#e74c3c';
             timerText.style.textShadow = '0 0 10px rgba(231, 76, 60, 0.7)';
        } else if (timeLeft <= 30) {
            timerProgressCircle.style.stroke = '#f39c12'; // –û—Ä–∞–Ω–∂–µ–≤—ã–π
            timerText.style.color = '#f39c12';
            timerText.style.textShadow = '0 0 10px rgba(243, 156, 18, 0.5)';
        } else {
            timerProgressCircle.style.stroke = '#3498db'; // –°–∏–Ω–∏–π (–Ω–∞—á–∞–ª—å–Ω—ã–π)
            timerText.style.color = '#ecf0f1';
            timerText.style.textShadow = '0 0 10px rgba(52, 152, 219, 0.5)';
        }
    }

    function updateScoreDisplay() {
        scoreDisplay.textContent = `–û—á–∫–∏: ${score}`;
    }

    function displayVoteCounts(peaceVotes, warVotes) {
         peaceCountSpan.textContent = `–ó–∞ –º–∏—Ä: ${peaceVotes !== null ? peaceVotes : '?'}`;
         warCountSpan.textContent = `–ü—Ä–æ—Ç–∏–≤ –º–∏—Ä–∞: ${warVotes !== null ? warVotes : '?'}`;
         voteCountsDiv.style.display = 'block';
         voteErrorP.style.display = (peaceVotes === null || warVotes === null) ? 'block' : 'none';
    }

     // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –º–µ–∂–¥—É —Å–µ–∫—Ü–∏—è–º–∏
    function switchSection(activeSection) {
         document.querySelectorAll('.section').forEach(section => {
            if (section === activeSection) {
                 section.classList.add('active-section');
            } else {
                section.classList.remove('active-section');
            }
        });
     }

    // --- –§—É–Ω–∫—Ü–∏–∏ –ê–Ω–∏–º–∞—Ü–∏–π –∏ –ò–≥—Ä—ã ---
    function spawnAnimatedWord() {
        const word = WORDS_TO_ANIMATE[Math.floor(Math.random() * WORDS_TO_ANIMATE.length)];
        const wordElement = document.createElement('span');
        wordElement.classList.add('animated-word');
        wordElement.textContent = word;

        // –°–ª—É—á–∞–π–Ω–æ–µ –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ
        wordElement.style.top = `${Math.random() * 90}%`; // –ù–µ —É —Å–∞–º–æ–≥–æ –∫—Ä–∞—è
        wordElement.style.left = `${Math.random() * 90}%`;
        wordElement.style.fontSize = `${1.5 + Math.random() * 1.5}rem`; // –†–∞–∑–Ω—ã–π —Ä–∞–∑–º–µ—Ä
        wordElement.style.animationDuration = `${6 + Math.random() * 4}s`; // –†–∞–∑–Ω–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å

        backgroundAnimationsDiv.appendChild(wordElement);

        // –£–¥–∞–ª—è–µ–º —Å–ª–æ–≤–æ –ø–æ—Å–ª–µ –∞–Ω–∏–º–∞—Ü–∏–∏ + –Ω–µ–±–æ–ª—å—à–æ–π –∑–∞–ø–∞—Å
        const timeoutId = setTimeout(() => {
             if (wordElement.parentNode) {
                 wordElement.parentNode.removeChild(wordElement);
             }
        }, parseFloat(wordElement.style.animationDuration || 8) * 1000 + 500);
         activeTimeouts.push(timeoutId);
    }

    function spawnClickerTarget() {
        const target = document.createElement('div');
        target.classList.add('clicker-target');
        target.textContent = 'üéØ'; // –ú–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∏–∫–æ–Ω–∫—É –∏–ª–∏ —Å–∏–º–≤–æ–ª

        // –ü–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä—É–µ–º –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö game-area
        const areaRect = clickerGameArea.getBoundingClientRect();
        const targetSize = 40; // –†–∞–∑–º–µ—Ä —Ü–µ–ª–∏
        target.style.top = `${Math.random() * (areaRect.height - targetSize)}px`;
        target.style.left = `${Math.random() * (areaRect.width - targetSize)}px`;

        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞
        target.onclick = () => {
            if (target.parentNode) { // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ü–µ–ª—å –µ—â–µ –Ω–µ —É–¥–∞–ª–µ–Ω–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, —Ç–∞–π–º–∞—É—Ç–æ–º)
                score++;
                updateScoreDisplay();
                target.classList.add('clicked'); // –ê–Ω–∏–º–∞—Ü–∏—è –∏—Å—á–µ–∑–Ω–æ–≤–µ–Ω–∏—è –ø—Ä–∏ –∫–ª–∏–∫–µ
                // –£–¥–∞–ª—è–µ–º –ø–æ—Å–ª–µ –∞–Ω–∏–º–∞—Ü–∏–∏ –∫–ª–∏–∫–∞
                setTimeout(() => {
                     if (target.parentNode) target.parentNode.removeChild(target);
                 }, 300);
                target.onclick = null; // –£–±–∏—Ä–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –¥–≤–æ–π–Ω—ã—Ö –∫–ª–∏–∫–æ–≤
            }
        };

        clickerGameArea.appendChild(target);

        // –¢–∞–π–º–∞—É—Ç –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ —Ü–µ–ª–∏, –µ—Å–ª–∏ –ø–æ –Ω–µ–π –Ω–µ –∫–ª–∏–∫–Ω—É–ª–∏
        const removeTimeoutId = setTimeout(() => {
             if (target.parentNode && !target.classList.contains('clicked')) {
                 target.style.opacity = '0'; // –ü–ª–∞–≤–Ω–æ–µ –∏—Å—á–µ–∑–Ω–æ–≤–µ–Ω–∏–µ
                 setTimeout(() => {
                     if (target.parentNode) target.parentNode.removeChild(target);
                  }, 300);
             }
        }, TARGET_LIFETIME);
         activeTimeouts.push(removeTimeoutId);
    }


    // --- –û—Å–Ω–æ–≤–Ω–∞—è –õ–æ–≥–∏–∫–∞ –¢–∞–π–º–µ—Ä–∞ –∏ –ü–µ—Ä–µ—Ö–æ–¥–æ–≤ ---
    function stopGameAndAnimations() {
        clearInterval(mainTimerInterval);
        clearInterval(wordSpawnInterval);
        clearInterval(targetSpawnInterval);

        // –û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ —Å–æ–∑–¥–∞–Ω–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –∏ —Ç–∞–π–º–∞—É—Ç—ã
         backgroundAnimationsDiv.innerHTML = '';
         clickerGameArea.innerHTML = '';
         activeTimeouts.forEach(clearTimeout);
         activeTimeouts = [];
    }

    function startTimerAndGame() {
        timeLeft = INITIAL_TIME;
        score = 0;
        updateTimerDisplay();
        updateScoreDisplay();
        body.className = ''; // –°–±—Ä–æ—Å —Ç–µ–º

         switchSection(timerGameSection); // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–µ–∫—Ü–∏—é —Ç–∞–π–º–µ—Ä–∞/–∏–≥—Ä—ã

        // –ó–∞–ø—É—Å–∫ —Ç–∞–π–º–µ—Ä–∞
        mainTimerInterval = setInterval(() => {
            timeLeft--;
            updateTimerDisplay();

            if (timeLeft < 0) {
                stopGameAndAnimations();
                // –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–µ–∫—Ü–∏–∏ –≤—ã–±–æ—Ä–∞
                switchSection(choiceSection);
                 setChoiceButtonsState(true); // –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫–∏ –≤—ã–±–æ—Ä–∞
            }
        }, 1000);

        // –ó–∞–ø—É—Å–∫ –∞–Ω–∏–º–∞—Ü–∏–∏ —Å–ª–æ–≤
        spawnAnimatedWord(); // –ü–µ—Ä–≤—ã–π –∑–∞–ø—É—Å–∫ —Å—Ä–∞–∑—É
        wordSpawnInterval = setInterval(spawnAnimatedWord, WORD_SPAWN_INTERVAL);

        // –ó–∞–ø—É—Å–∫ –∫–ª–∏–∫–µ—Ä-–∏–≥—Ä—ã
        spawnClickerTarget(); // –ü–µ—Ä–≤–∞—è —Ü–µ–ª—å
        targetSpawnInterval = setInterval(spawnClickerTarget, TARGET_SPAWN_INTERVAL);
    }

    function setChoiceButtonsState(enabled) {
         peaceBtn.disabled = !enabled;
         warBtn.disabled = !enabled;
         loadingIndicatorChoice.style.display = enabled ? 'none' : 'block';
     }


    async function handleVote(choice) {
         setChoiceButtonsState(false); // –ë–ª–æ–∫–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫–∏

        const counterKey = choice === 'peace' ? COUNTER_PEACE_KEY : COUNTER_WAR_KEY;
        const themeClass = choice === 'peace' ? 'peace-chosen' : 'war-chosen';
        const resultText = choice === 'peace' ? '–í—ã –≤—ã–±—Ä–∞–ª–∏ –ú–ò–†! üïäÔ∏è' : '–í—ã –≤—ã–±—Ä–∞–ª–∏... –î–†–£–ì–£–Æ –°–¢–û–†–û–ù–£! üí•'; // –£—Å–∏–ª–∏–ª –Ω–µ–º–Ω–æ–≥–æ

        // 1. –ò–Ω–∫—Ä–µ–º–µ–Ω—Ç–∏—Ä—É–µ–º —Å—á–µ—Ç—á–∏–∫
        await hitCounterAPI(counterKey, 'up');

        // 2. –ü—Ä–∏–º–µ–Ω—è–µ–º —Ç–µ–º—É –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å—Ä–∞–∑—É
         body.className = themeClass; // –ü—Ä–∏–º–µ–Ω–∏—Ç—å —Ç–µ–º—É —Ñ–æ–Ω–∞
         resultMessage.innerHTML = resultText; // –ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—Å—Ç–æ–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤—ã–±–æ—Ä–∞
         switchSection(resultSection); // –ü–æ–∫–∞–∑–∞—Ç—å —Å–µ–∫—Ü–∏—é —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞

        // 3. –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –û–ë–ê —Å—á–µ—Ç—á–∏–∫–∞ –ü–û–°–õ–ï –∏–Ω–∫—Ä–µ–º–µ–Ω—Ç–∞
         const [peaceVotes, warVotes] = await Promise.all([
            hitCounterAPI(COUNTER_PEACE_KEY, 'get'),
            hitCounterAPI(COUNTER_WAR_KEY, 'get')
        ]);

        // 4. –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Å—á–µ—Ç—á–∏–∫–∏
        displayVoteCounts(peaceVotes, warVotes);

         // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∫–Ω–æ–ø–∫—É "–ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞", –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
         // const restartBtn = document.getElementById('restartBtn');
         // if(restartBtn) restartBtn.onclick = startTimerAndGame;
    }


    // --- –î–æ–±–∞–≤–ª—è–µ–º –°–ª—É—à–∞—Ç–µ–ª–∏ –°–æ–±—ã—Ç–∏–π ---
    peaceBtn.addEventListener('click', () => handleVote('peace'));
    warBtn.addEventListener('click', () => handleVote('war'));

    // --- –ó–∞–ø—É—Å–∫ ---
    startTimerAndGame(); // –ù–∞—á–∏–Ω–∞–µ–º –≤—Å–µ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã

});
